{"version":3,"sources":["components/TodoList/TodoList.tsx","components/TodoFilter/TodoFilter.tsx","components/Loader/Loader.tsx","api.ts","components/TodoModal/TodoModal.tsx","App.tsx","index.tsx"],"names":["StatusOfFilter","TodoList","todos","fnSelectTodo","selectTodoId","fnSelectUser","status","list","useMemo","all","filter","todo","active","completed","filterTodos","className","map","classNames","id","title","type","onClick","userId","TodoFilter","handleChange","query","setQuery","value","onChange","event","target","placeholder","style","pointerEvents","Loader","get","url","delay","fullURL","Promise","resolve","setTimeout","then","fetch","res","json","getTodos","TodoModal","todoId","useState","user","setUser","setTodos","useEffect","getUser","currentUser","myTodos","href","email","name","App","setTodoId","setUserId","setStatus","visibleTodos","toLowerCase","includes","length","selectUserId","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.220890de.chunk.js","sourcesContent":["import React, { useMemo } from 'react';\nimport classNames from 'classnames';\nimport { Todo } from '../../types/Todo';\n\ntype Props = {\n  todos: Todo[];\n  fnSelectTodo: (todoId: number) => void;\n  selectTodoId: number;\n  fnSelectUser: (selectUserId: number) => void;\n  status: string;\n};\n\nenum StatusOfFilter {\n  all = 'all',\n  active = 'active',\n  completed = 'completed',\n}\n\nfunction filterTodos(status: string, todos: Todo[]): Todo[] {\n  switch (status) {\n    case StatusOfFilter.all:\n      return todos.filter(todo => todo);\n\n    case StatusOfFilter.active:\n      return todos.filter(todo => !todo.completed);\n\n    case StatusOfFilter.completed:\n      return todos.filter(todo => todo.completed);\n\n    default:\n      return todos;\n  }\n}\n\nexport const TodoList: React.FC<Props> = (\n  {\n    todos,\n    fnSelectTodo,\n    selectTodoId,\n    fnSelectUser,\n    status,\n  },\n) => {\n  const list: Todo[] = useMemo(() => {\n    return filterTodos(status, todos);\n  }, [todos, status]);\n\n  return (\n    <table className=\"table is-narrow is-fullwidth\">\n      <thead>\n        <tr>\n          <th>#</th>\n          <th>\n            <span className=\"icon\">\n              <i className=\"fas fa-check\" />\n            </span>\n          </th>\n          <th>Title</th>\n          <th> </th>\n        </tr>\n      </thead>\n\n      <tbody>\n        {list.map(todo => (\n          <tr\n            data-cy=\"todo\"\n            className={classNames(\n              { 'has-background-info-light': todo.id === selectTodoId },\n            )}\n            key={todo.id}\n          >\n            <td className=\"is-vcentered\">{todo.id}</td>\n            <td className=\"is-vcentered\">\n              { todo.completed && (\n                <span className=\"icon\">\n                  <i className=\"fas fa-check\" />\n                </span>\n              )}\n            </td>\n            <td className=\"is-vcentered is-expand\">\n              <p className={classNames({\n                'has-text-danger': !todo.completed,\n                'has-text-success': todo.completed,\n              })}\n              >\n                {todo.title}\n              </p>\n            </td>\n            <td className=\"has-text-right is-vcentered\">\n              {selectTodoId === todo.id ? (\n                <button\n                  data-cy=\"selectButton\"\n                  className=\"button\"\n                  type=\"button\"\n                  onClick={() => fnSelectTodo(0)}\n                >\n                  <span className=\"icon\">\n                    <i className=\"far fa-eye-slash\" />\n                  </span>\n                </button>\n              ) : (\n                <button\n                  data-cy=\"selectButton\"\n                  className=\"button\"\n                  type=\"button\"\n                  onClick={() => {\n                    fnSelectTodo(todo.id);\n                    fnSelectUser(todo.userId);\n                  }}\n                >\n                  <span className=\"icon\">\n                    <i className=\"far fa-eye\" />\n                  </span>\n                </button>\n              )}\n            </td>\n          </tr>\n        ))}\n      </tbody>\n    </table>\n  );\n};\n","import React from 'react';\n\ntype Props = {\n  status: string;\n  handleChange: (value: string) => void;\n  query: string;\n  setQuery: (arg: string) => void;\n};\n\nexport const TodoFilter: React.FC<Props> = (\n  {\n    status,\n    handleChange,\n    query,\n    setQuery,\n  },\n) => {\n  return (\n    <form className=\"field has-addons\">\n      <p className=\"control\">\n        <span className=\"select\">\n          <select\n            value={status}\n            data-cy=\"statusSelect\"\n            onChange={(event) => handleChange(event.target.value)}\n          >\n            <option value=\"all\">All</option>\n            <option value=\"active\">Active</option>\n            <option value=\"completed\">Completed</option>\n          </select>\n        </span>\n      </p>\n\n      <p className=\"control is-expanded has-icons-left has-icons-right\">\n        <input\n          data-cy=\"searchInput\"\n          type=\"text\"\n          className=\"input\"\n          placeholder=\"Search...\"\n          value={query}\n          onChange={event => setQuery(event.target.value)}\n        />\n        <span className=\"icon is-left\">\n          <i className=\"fas fa-magnifying-glass\" />\n        </span>\n\n        {query && (\n          <span className=\"icon is-right\" style={{ pointerEvents: 'all' }}>\n            {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n            <button\n              data-cy=\"clearSearchButton\"\n              type=\"button\"\n              className=\"delete\"\n              onClick={() => setQuery('')}\n            />\n          </span>\n        )}\n      </p>\n    </form>\n  );\n};\n","import React from 'react';\nimport './Loader.scss';\n\nexport const Loader: React.FC = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import { Todo } from './types/Todo';\nimport { User } from './types/User';\n\n// eslint-disable-next-line max-len\nconst BASE_URL = 'https://mate-academy.github.io/react_dynamic-list-of-todos/api';\n\n// This function creates a promime\n// that is resolved after a given delay\nfunction wait(delay: number): Promise<void> {\n  return new Promise(resolve => {\n    setTimeout(resolve, delay);\n  });\n}\n\nfunction get<T>(url: string): Promise<T> {\n  // eslint-disable-next-line prefer-template\n  const fullURL = BASE_URL + url + '.json';\n\n  // we add some delay to see now the laoder works\n  return wait(300)\n    .then(() => fetch(fullURL))\n    .then(res => res.json());\n}\n\nexport const getTodos = () => get<Todo[]>('/todos');\n\nexport const getUser = (userId: number) => get<User>(`/users/${userId}`);\n","import React, { useEffect, useState } from 'react';\nimport { Loader } from '../Loader';\nimport { getTodos, getUser } from '../../api';\nimport { User } from '../../types/User';\nimport { Todo } from '../../types/Todo';\n\ntype Props = {\n  userId: number;\n  todoId: number;\n  fnSelectTodo: (selectTodoId: number) => void;\n};\n\nexport const TodoModal: React.FC<Props> = (\n  {\n    userId,\n    todoId,\n    fnSelectTodo,\n  },\n) => {\n  const [user, setUser] = useState<User | null>(null);\n  const [todos, setTodos] = useState<Todo[]>([]);\n\n  useEffect(() => {\n    getUser(userId).then(currentUser => setUser(currentUser));\n    getTodos().then(myTodos => setTodos(myTodos));\n  }, []);\n\n  return (\n    <div className=\"modal is-active\" data-cy=\"modal\">\n      <div className=\"modal-background\" />\n\n      {!user ? (\n        <Loader />\n      ) : (\n        <div className=\"modal-card\">\n          {todos.map(todo => (\n            todo.id === todoId\n            && (\n              <>\n                <header className=\"modal-card-head\">\n                  <div\n                    className=\"modal-card-title has-text-weight-medium\"\n                    data-cy=\"modal-header\"\n                  >\n                    Todo #\n                    {todo.id}\n                  </div>\n\n                  {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n                  <button\n                    type=\"button\"\n                    className=\"delete\"\n                    data-cy=\"modal-close\"\n                    onClick={() => fnSelectTodo(0)}\n                  />\n                </header>\n\n                <div className=\"modal-card-body\">\n                  <p className=\"block\" data-cy=\"modal-title\">\n                    {todo.title}\n                  </p>\n\n                  <p className=\"block\" data-cy=\"modal-user\">\n                    {todo.completed ? (\n                      <strong className=\"has-text-success\">Done</strong>)\n                      : (\n                        <strong className=\"has-text-danger\">Planned</strong>\n                      )}\n\n                    {' by '}\n\n                    <a href={`mailto:${user.email}`}>\n                      {user.name}\n                    </a>\n                  </p>\n                </div>\n              </>\n            )\n          ))}\n        </div>\n      )}\n    </div>\n  );\n};\n","/* eslint-disable max-len */\nimport React, { useEffect, useState } from 'react';\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { TodoList } from './components/TodoList';\nimport { TodoFilter } from './components/TodoFilter';\nimport { TodoModal } from './components/TodoModal';\nimport { Loader } from './components/Loader';\nimport { getTodos } from './api';\nimport { Todo } from './types/Todo';\n\nexport const App: React.FC = () => {\n  const [todos, setTodos] = useState <Todo[]>([]);\n  const [todoId, setTodoId] = useState(0);\n  const [userId, setUserId] = useState(0);\n  const [status, setStatus] = useState('all');\n  const [query, setQuery] = useState('');\n\n  const isInQuery = (arg: string) => {\n    if (arg.toLowerCase().includes(query.toLowerCase())) {\n      return true;\n    }\n\n    return false;\n  };\n\n  const visibleTodos = todos.filter(todo => (\n    isInQuery(todo.title)\n  ));\n\n  const handleChange = (value: string) => {\n    setStatus(value);\n  };\n\n  useEffect(() => {\n    getTodos().then(myTodos => setTodos(myTodos));\n  }, []);\n\n  return (\n    <>\n      <div className=\"section\">\n        <div className=\"container\">\n          <div className=\"box\">\n            <h1 className=\"title\">Todos:</h1>\n\n            <div className=\"block\">\n              <TodoFilter\n                status={status}\n                handleChange={handleChange}\n                query={query}\n                setQuery={setQuery}\n              />\n            </div>\n\n            <div className=\"block\">\n              {\n                todos.length === 0\n                  ? <Loader />\n                  : (\n                    <TodoList\n                      todos={visibleTodos}\n                      fnSelectTodo={(selectTodoId) => setTodoId(selectTodoId)}\n                      selectTodoId={todoId}\n                      fnSelectUser={(selectUserId) => setUserId(selectUserId)}\n                      status={status}\n                    />\n                  )\n              }\n            </div>\n          </div>\n        </div>\n      </div>\n\n      {todoId !== 0\n      && (\n        <TodoModal\n          userId={userId}\n          todoId={todoId}\n          fnSelectTodo={(selectTodoId) => setTodoId(selectTodoId)}\n        />\n      )}\n    </>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}
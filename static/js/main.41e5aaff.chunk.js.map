{"version":3,"sources":["components/TodoList/TodoList.tsx","components/TodoFilter/TodoFilter.tsx","components/Loader/Loader.tsx","api.ts","components/TodoModal/TodoModal.tsx","App.tsx","helpers/is-in-query.ts","index.tsx"],"names":["StatusOfFilter","TodoList","todos","fnSelectTodo","selectTodoId","fnSelectUser","status","list","useMemo","All","Active","filter","todo","completed","Completed","Error","filterTodos","className","map","id","title","userId","classNames","type","onClick","showTodoModal","TodoFilter","handleChange","query","setQuery","value","onChange","event","target","placeholder","style","pointerEvents","Loader","get","url","delay","fullURL","Promise","resolve","setTimeout","then","fetch","res","json","TodoModal","useState","user","setUser","useEffect","getUser","currentUser","href","email","name","App","setTodos","selectedTodoId","setSelectedTodoId","setUserId","setStatus","find","item","visibleTodos","toLowerCase","includes","isInQuery","myTodos","length","selectUserId","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.41e5aaff.chunk.js","sourcesContent":["import React, { useMemo } from 'react';\nimport classNames from 'classnames';\nimport { Todo } from '../../types/Todo';\n\ntype Props = {\n  todos: Todo[];\n  fnSelectTodo: (todoId: number) => void;\n  selectTodoId: number;\n  fnSelectUser: (selectUserId: number) => void;\n  status: StatusOfFilter;\n};\n\nexport enum StatusOfFilter {\n  All = 'all',\n  Active = 'active',\n  Completed = 'completed',\n}\n\nfunction filterTodos(status: StatusOfFilter, todos: Todo[]): Todo[] {\n  switch (status) {\n    case StatusOfFilter.All:\n      return todos;\n\n    case StatusOfFilter.Active:\n      return todos.filter(todo => !todo.completed);\n\n    case StatusOfFilter.Completed:\n      return todos.filter(todo => todo.completed);\n\n    default:\n      throw new Error('Unexpected values');\n  }\n}\n\nexport const TodoList: React.FC<Props> = ({\n  todos,\n  fnSelectTodo,\n  selectTodoId,\n  fnSelectUser,\n  status,\n}) => {\n  const list: Todo[] = useMemo(() => {\n    return filterTodos(status, todos);\n  }, [todos, status]);\n\n  const showTodoModal = (id: number, userId: number) => {\n    fnSelectTodo(id);\n    fnSelectUser(userId);\n  };\n\n  return (\n    <table className=\"table is-narrow is-fullwidth\">\n      <thead>\n        <tr>\n          <th>#</th>\n          <th>\n            <span className=\"icon\">\n              <i className=\"fas fa-check\" />\n            </span>\n          </th>\n          <th>Title</th>\n          <th> </th>\n        </tr>\n      </thead>\n\n      <tbody>\n        {list.map(({\n          id,\n          completed,\n          title,\n          userId,\n        }) => (\n          <tr\n            data-cy=\"todo\"\n            className={classNames(\n              { 'has-background-info-light': id === selectTodoId },\n            )}\n            key={id}\n          >\n            <td className=\"is-vcentered\">{id}</td>\n            <td className=\"is-vcentered\">\n              { completed && (\n                <span className=\"icon\">\n                  <i className=\"fas fa-check\" />\n                </span>\n              )}\n            </td>\n            <td className=\"is-vcentered is-expanded\">\n              <p className={classNames({\n                'has-text-danger': !completed,\n                'has-text-success': completed,\n              })}\n              >\n                {title}\n              </p>\n            </td>\n            <td className=\"has-text-right is-vcentered\">\n              {selectTodoId === id ? (\n                <button\n                  data-cy=\"selectButton\"\n                  className=\"button\"\n                  type=\"button\"\n                  onClick={() => fnSelectTodo(0)}\n                >\n                  <span className=\"icon\">\n                    <i className=\"far fa-eye-slash\" />\n                  </span>\n                </button>\n              ) : (\n                <button\n                  data-cy=\"selectButton\"\n                  className=\"button\"\n                  type=\"button\"\n                  onClick={() => {\n                    showTodoModal(id, userId);\n                  }}\n                >\n                  <span className=\"icon\">\n                    <i className=\"far fa-eye\" />\n                  </span>\n                </button>\n              )}\n            </td>\n          </tr>\n        ))}\n      </tbody>\n    </table>\n  );\n};\n","import React from 'react';\nimport { StatusOfFilter } from '../TodoList';\n\ntype Props = {\n  status: StatusOfFilter;\n  handleChange: (value: StatusOfFilter) => void;\n  query: string;\n  setQuery: (arg: string) => void;\n};\n\nexport const TodoFilter: React.FC<Props> = (\n  {\n    status,\n    handleChange,\n    query,\n    setQuery,\n  },\n) => {\n  return (\n    <form className=\"field has-addons\">\n      <p className=\"control\">\n        <span className=\"select\">\n          <select\n            value={status}\n            data-cy=\"statusSelect\"\n            onChange={(event) => handleChange(\n              event.target.value as StatusOfFilter,\n            )}\n          >\n            <option value={StatusOfFilter.All}>All</option>\n            <option value={StatusOfFilter.Active}>Active</option>\n            <option value={StatusOfFilter.Completed}>Completed</option>\n          </select>\n        </span>\n      </p>\n\n      <p className=\"control is-expanded has-icons-left has-icons-right\">\n        <input\n          data-cy=\"searchInput\"\n          type=\"text\"\n          className=\"input\"\n          placeholder=\"Search...\"\n          value={query}\n          onChange={event => setQuery(event.target.value)}\n        />\n        <span className=\"icon is-left\">\n          <i className=\"fas fa-magnifying-glass\" />\n        </span>\n\n        {query && (\n          <span className=\"icon is-right\" style={{ pointerEvents: 'all' }}>\n            <button\n              data-cy=\"clearSearchButton\"\n              type=\"button\"\n              aria-label=\"Clear search\"\n              className=\"delete\"\n              onClick={() => setQuery('')}\n            />\n          </span>\n        )}\n      </p>\n    </form>\n  );\n};\n","import React from 'react';\nimport './Loader.scss';\n\nexport const Loader: React.FC = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import { Todo } from './types/Todo';\nimport { User } from './types/User';\n\n// eslint-disable-next-line max-len\nconst BASE_URL = 'https://mate-academy.github.io/react_dynamic-list-of-todos/api';\n\nfunction wait(delay: number): Promise<void> {\n  return new Promise(resolve => {\n    setTimeout(resolve, delay);\n  });\n}\n\nfunction get<T>(url: string): Promise<T> {\n  // eslint-disable-next-line prefer-template\n  const fullURL = BASE_URL + url + '.json';\n\n  return wait(300)\n    .then(() => fetch(fullURL))\n    .then(res => res.json());\n}\n\nexport const getTodos = () => get<Todo[]>('/todos');\n\nexport const getUser = (userId: number) => get<User>(`/users/${userId}`);\n","import React, { useEffect, useState } from 'react';\nimport { Loader } from '../Loader';\nimport { getUser } from '../../api';\nimport { User } from '../../types/User';\nimport { Todo } from '../../types/Todo';\n\ntype Props = {\n  userId: number;\n  todo: Todo;\n  fnSelectTodo: (selectTodoId: number) => void;\n};\n\nexport const TodoModal: React.FC<Props> = (\n  {\n    userId,\n    todo,\n    fnSelectTodo,\n  },\n) => {\n  const [user, setUser] = useState<User | null>(null);\n\n  useEffect(() => {\n    getUser(userId).then(currentUser => setUser(currentUser));\n  }, []);\n\n  return (\n    <div className=\"modal is-active\" data-cy=\"modal\">\n      <div className=\"modal-background\" />\n\n      {user ? (\n        <div className=\"modal-card\">\n          <header className=\"modal-card-head\">\n            <div\n              className=\"modal-card-title has-text-weight-medium\"\n              data-cy=\"modal-header\"\n            >\n              Todo #\n              {todo.id}\n            </div>\n\n            <button\n              type=\"button\"\n              aria-label=\"Mute volume\"\n              className=\"delete\"\n              data-cy=\"modal-close\"\n              onClick={() => fnSelectTodo(0)}\n            />\n          </header>\n\n          <div className=\"modal-card-body\">\n            <p className=\"block\" data-cy=\"modal-title\">\n              {todo.title}\n            </p>\n\n            <p className=\"block\" data-cy=\"modal-user\">\n              {todo.completed ? (\n                <strong className=\"has-text-success\">Done</strong>)\n                : (\n                  <strong className=\"has-text-danger\">Planned</strong>\n                )}\n\n              {' by '}\n\n              <a href={`mailto:${user.email}`}>\n                {user.name}\n              </a>\n            </p>\n          </div>\n        </div>\n      ) : (\n        <Loader />\n      )}\n    </div>\n  );\n};\n","/* eslint-disable max-len */\nimport React, { useEffect, useMemo, useState } from 'react';\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { TodoList, StatusOfFilter } from './components/TodoList';\nimport { TodoFilter } from './components/TodoFilter';\nimport { TodoModal } from './components/TodoModal';\nimport { Loader } from './components/Loader';\nimport { getTodos } from './api';\nimport { Todo } from './types/Todo';\nimport { isInQuery } from './helpers/is-in-query';\n\nexport const App: React.FC = () => {\n  const [todos, setTodos] = useState<Todo[]>([]);\n  const [selectedTodoId, setSelectedTodoId] = useState(0);\n  const [userId, setUserId] = useState(0);\n  const [status, setStatus] = useState<StatusOfFilter>(StatusOfFilter.All);\n  const [query, setQuery] = useState('');\n\n  const todo = useMemo(() => todos.find(item => (item.id === selectedTodoId)) as Todo, [selectedTodoId]);\n\n  const visibleTodos = useMemo(() => todos.filter(item => isInQuery(item.title, query)), [todos, query]);\n\n  const handleChange = (value: StatusOfFilter) => {\n    setStatus(value);\n  };\n\n  useEffect(() => {\n    getTodos().then(myTodos => setTodos(myTodos));\n  }, []);\n\n  return (\n    <>\n      <div className=\"section\">\n        <div className=\"container\">\n          <div className=\"box\">\n            <h1 className=\"title\">Todos:</h1>\n\n            <div className=\"block\">\n              <TodoFilter\n                status={status}\n                handleChange={handleChange}\n                query={query}\n                setQuery={setQuery}\n              />\n            </div>\n\n            <div className=\"block\">\n              {!todos.length\n                ? <Loader />\n                : (\n                  <TodoList\n                    todos={visibleTodos}\n                    fnSelectTodo={(selectTodoId) => setSelectedTodoId(selectTodoId)}\n                    selectTodoId={selectedTodoId}\n                    fnSelectUser={(selectUserId) => setUserId(selectUserId)}\n                    status={status}\n                  />\n                )}\n            </div>\n          </div>\n        </div>\n      </div>\n\n      {!!selectedTodoId && (\n        <TodoModal\n          userId={userId}\n          todo={todo}\n          fnSelectTodo={(selectTodoId) => setSelectedTodoId(selectTodoId)}\n        />\n      )}\n    </>\n  );\n};\n","export const isInQuery = (title: string, query: string) => {\n  return (\n    title.toLowerCase().includes(query.toLowerCase())\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}